# Gather the current output of "show running configuration" on the switch
- name: Gather current configuration
  dellemc.os9.os9_facts:
    gather_subset:
      - config
  register: cur_config

# Call a filter plugin to convert the configuration to a nested dict for ease of use later
- name: Convert configuration to dict
  set_fact:
    cur_config: "{{ cur_config | os9_getFactDict() }}"

# Set the hostname of the switch to the value in the hosts file
- name: Set hostname
  dellemc.os9.os9_config:
    lines:
      - hostname {{ inventory_hostname }}

# Disable the telnet server on the switch
- name: Disable telnet server
  dellemc.os9.os9_config:
    lines:
      - no ip telnet server enable

# On OS9, fanout interfaces add/remove logical interfaces, so that needs to be done first
# A filter plugin is called which creates various "stack-unit" commands on the switch
- name: Update interface fanout configuration
  dellemc.os9.os9_config:
    lines: "{{ interfaces | os9_getFanoutConfig(cur_config) }}"

# Since fanout changes will change the existing switch configuration, the configuration variable needs to be updated
- name: Gather current configuration after fanout change
  dellemc.os9.os9_facts:
    gather_subset:
      - config
  register: cur_config

# ...and converted to a dict again
- name: Convert configuration to dict after fanout change
  set_fact:
    cur_config: "{{ cur_config | os9_getFactDict() }}"

# This task will set individual interface configurations, such as ip, mtu, etc.
- name: Update interface configuration
  dellemc.os9.os9_config:
    lines: "{{ item.value }}"
    parents: ["interface {{ item.key }}"]
  loop: "{{ lookup('ansible.builtin.dict', interfaces | os9_getIntfConfig(cur_config, type='intf'), wantlist=True) }}"

# This create/update the interface configurations for port channel interfaces
- name: Update port-channel interface configuration
  dellemc.os9.os9_config:
    lines: "{{ item.value }}"
    parents: ["interface {{ item.key }}"]
  loop: "{{ lookup('ansible.builtin.dict', port_channels | os9_getIntfConfig(cur_config, type='port-channel'), wantlist=True) }}"

# This task will add interfaces to LAGs if using the LACP protocol.
# This is a separate task because LACP configuration is done at the
# interface level, not the port channel level
- name: Update LACP members
  dellemc.os9.os9_config:
    lines: "{{ item.value }}"
    parents: ["interface port-channel {{ item.key }}", "port-channel-protocol lacp"]
  loop: "{{ lookup('ansible.builtin.dict', port_channels | os9_getLACPConfig(cur_config), wantlist=True) }}"
  register: update_lacp_members

# If an interface is removed from all port channels, the LACP
# protocol will remain active. This task cleans that up (not strictly required)
# Runs only of LACP config was changed
- name: Cleanup disabled LACP interfaces
  dellemc.os9.os9_config:
    lines: "{{ item.value }}"
    parents: ["{{ item.key }}"]
  loop: "{{ lookup('ansible.builtin.dict', interfaces | os9_cleanupLACPConfig(cur_config), wantlist=True) }}"
  when: update_lacp_members.changed

# This task will update system configuration (for example, RSTP config)
- name: Update system configuration
  dellemc.os9.os9_config:
    lines: "{{ item.value }}"
    parents: ["{{ item.key }}"]
  loop: "{{ lookup('ansible.builtin.dict', system | os9_getSystemConfig(cur_config), wantlist=True) }}"
  register: update_system_conf

# Cleans up system configuration, for example,
# RSTP protocol left on after removal
# Only runs if system configuration was changed above
- name: Cleanup system configuration
  dellemc.os9.os9_config:
    lines: "{{ cur_config | os9_cleanupSystemConfig() }}"
  when: update_system_conf.changed

# This task creates a dictionary of VLANs created from
# the global configuration
- name: Generate vlan dictionary
  set_fact:
    vlan_dict: "{{ vlans | get_vlan_dict(group_names) }}"

# This task creates VLANs on switches and also
# sets their names and descriptions
- name: Create and update VLAN configuration
  dellemc.os9.os9_config:
    lines:
      - name {{ item.value.name }}
      - description {{ item.value.description }}
    parents: ["interface vlan {{ item.key }}"]
  loop: "{{ lookup('ansible.builtin.dict', vlan_dict, wantlist=True) }}"

# This task assigns interfaces to VLANs. This is separate
# from interface configuration because the assignment is done
# at the vlan interface in dell os9
- name: Update VLAN assignment configuration
  dellemc.os9.os9_config:
    lines: "{{ item.value }}"
    parents: ["interface vlan {{ item.key }}"]
  loop: "{{ lookup('ansible.builtin.dict', interfaces | os9_getVlanConfig(vlan_dict, cur_config), wantlist=True) }}"

# This task updates the VLAN interfaces themselves with any
# set parameters, such as mtu, or IP
- name: Update VLAN interface configuration
  dellemc.os9.os9_config:
    lines: "{{ item.value }}"
    parents: ["interface {{ item.key }}"]
  loop: "{{ lookup('ansible.builtin.dict', vlan_interfaces | os9_getIntfConfig(cur_config, type='vlan'), wantlist=True) }}"

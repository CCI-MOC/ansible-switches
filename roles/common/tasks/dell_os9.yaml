---
# Define OS9 connection parameters
- name: Define OS9 Connection Parameters
  ansible.builtin.set_fact:
    ansible_become: true
    ansible_become_method: enable
    ansible_ssh_user: "{{ sw_secret['user'] }}"
    ansible_ssh_pass: "{{ sw_secret['pass'] }}"
    ansible_become_pass: "{{ sw_secret['pass'] }}"

# Set Connection Parameters
- name: Set Conn Parameters
  dellemc.os9.os9_config:
    lines:
      - ip ssh connection-rate-limit 60
  notify: save_config

# Set the hostname of the switch to the value in the hosts file
- name: Set Hostname
  dellemc.os9.os9_config:
    lines:
      - hostname {{ inventory_hostname }}
  notify: save_config

# Gather the current output of "show running configuration" on the switch
- name: Gather Current Configuration
  dellemc.os9.os9_facts:
    gather_subset:
      - config
  register: cur_config

# Apply fanout config
- name: Apply Fanout Configuration
  dellemc.os9.os9_config:
    lines:
      - "{{ item }}"
    match: none
  loop: "{{ cur_config | OS9_FANOUTCFG(interfaces) }}"
  notify: save_config

# Gather the current output of "show running configuration" on the switch
- name: Gather Current Configuration after Fanout Change
  dellemc.os9.os9_facts:
    gather_subset:
      - config
  register: cur_config

# Apply manifest config (vlans and interfaces)
- name: Apply Manifest Configuration
  dellemc.os9.os9_config:
    lines: "{{ item }}"
    replace: block
    match: none
  loop: "{{ cur_config | OS9_GETCONFIG(interfaces, vlans) }}"
  notify: save_config

- name: Clean Deleted Interfaces
  dellemc.os9.os9_config:
    lines:
      - "{{ item }}"
    match: none
  loop: "{{ cur_config | OS9_CLEANINTF(interfaces, vlans) }}"
  notify: Save Config
